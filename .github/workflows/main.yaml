on: 
  push:
    branches: [ "main" ]
  pull_request: 
    branches: [ "main" ]

env:
  CONTAINER_VERSION: $(date +%s)

jobs:
  hello_world_job:
    runs-on: self-hosted
    name: Test and Build docker containers
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set variable date
        run: date +%s
        id: variable        

      - name: Dump GitHub context
        id: github_context_step
        run: echo $PORT
        env:
          PORT: ${{ vars.PORT }}

      # - name: Test
      #   uses: ./.dev
      
      # - name: Build Image
      #   run: sh -c 'docker build . --file Dockerfile --tag aid-alert_backend:$CONTAINER_VERSION'
      
      - name: Set variables
        run: | 
          sh -c 'export PORT=$PORT 
          export ENVIRONMENT=$ENVIRONMENT 
          export LOG_MODE=$LOG_MODE
          export LOG_FILE=$LOG_FILE
          export DATABASE_URL=$DATABASE_URL
          export DATABASE_URI_TYPE=$DATABASE_URI_TYPE
          export DATABASE_USER=$DATABASE_USER
          export DAATABASE_PASSWORD=$DATABASE_PASSWORD
          export DATABASE_NAME=$DATABASE_NAME
          export TAG_NUM=$CONTAINER_VERSION
          export DATABASE_ROOT_PASSWORD=$DATABASE_ROOT_PASSWORD
        env:
          PORT: ${{ secrets.PORT || vars.PORT }} 
          ENVIRONMENT: ${{ secrets.ENVIRONMENT || vars.ENVIRONMENT }} 
          LOG_MODE: ${{ secrets.LOG_MODE || vars.LOG_MODE }}
          LOG_FILE: ${{ secrets.LOG_FILE || vars.LOG_FILE }}
          DATABASE_URL: ${{ secrets.DATABASE_URL || vars.DATABASE_URL }}
          DATABASE_URI_TYPE: ${{ secrets.DATABASE_URI_TYPE || vars.DATABASE_URI_TYPE }}
          DATABASE_USER: ${{ secrets.DATABASE_USER || vars.DATABASE_USER }}
          DAATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD || vars.DATABASE_PASSWORD }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME || vars.DATABASE_NAME }}
          DATABASE_ROOT_PASSWRD: ${{ secrets.DATABASE_ROOT_PASSWORD || vars.DATABASE_ROOT_PASSWORD }}

      - name: Docker compose
        run: sh -c 'docker compose up -d --remove-orphans'

      # - name: Stop old container
      #   run: sh -c 'docker stop aid_alert-backend'

      # - name: Start New dev containers
      #   run: | 
      #     sh -c 'docker run 
      #     -e PORT=$PORT 
      #     -e ENVIRONMENT=$ENVIRONMENT 
      #     -e LOG_MODE=$LOG_MODE
      #     -e LOG_FILE=$LOG_FILE
      #     -e DATABASE_URL=$DATABASE_URL
      #     -e DATABASE_URI_TYPE=$DATABASE_URI_TYPE
      #     -e DATABASE_USER=$DATABASE_USER
      #     -e DAATABASE_PASSWORD=$DATABASE_PASSWORD
      #     -e DATABASE_NAME=$DATABASE_NAME
      #     --name=aid_alert-backend
      #     aid-alert_backend:$CONTAINER_VERSION'
      #   env:
      #     PORT: ${{ secrets.PORT }} 
      #     ENVIRONMENT: ${{ secrets.ENVIRONMENT }} 
      #     LOG_MODE: ${{ secrets.LOG_MODE }}
      #     LOG_FILE: ${{ secrets.LOG_FILE }}
      #     DATABASE_URL: ${{ secrets.DATABASE_URL }}
      #     DATABASE_URI_TYPE: ${{ secrets.DATABASE_URI_TYPE }}
      #     DATABASE_USER: ${{ secrets.DATABASE_USER }}
      #     DAATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      #     DATABASE_NAME: ${{ secrets.DATABASE_NAME }}